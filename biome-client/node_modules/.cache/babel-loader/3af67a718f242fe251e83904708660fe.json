{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matth\\\\ElectronApp\\\\biome\\\\biome-client\\\\src\\\\AuthModal.js\",\n    _s = $RefreshSig$();\n\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport { useState, useContext } from 'react';\nimport axios from 'axios';\nimport AuthModalContext from \"./AuthModalContext\";\nimport ClickOutHandler from 'react-clickout-handler';\nimport UserContext from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AuthModal() {\n  _s();\n\n  const [modalType, setModalType] = useState('login');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const modalContext = useContext(AuthModalContext);\n  const user = useContext(UserContext);\n  const visibleClass = modalContext.show ? 'block' : 'hidden';\n\n  if (modalContext.show && modalContext.show !== modalType) {\n    setModalType(modalContext.show);\n  }\n\n  function register(e) {\n    e.preventDefault();\n    const data = {\n      email,\n      username,\n      password\n    };\n    axios.post('http://localhost:4000/register', data, {\n      withCredentials: true\n    }).then(() => {\n      user.setUser({\n        username\n      });\n      modalContext.setShow(false);\n      setEmail('');\n      setPassword('');\n      setUsername('');\n    });\n  }\n\n  function login() {\n    const data = {\n      username,\n      password\n    };\n    axios.post('http://localhost:4000/login', data, {\n      withCredentials: true\n    }).then(() => {\n      modalContext.setShow(false);\n      user.setUser({\n        username\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen fixed top-0 left-0 z-30 flex \" + visibleClass,\n    style: {\n      backgroundColor: 'rgba(0,0,0,.6)'\n    },\n    children: /*#__PURE__*/_jsxDEV(ClickOutHandler, {\n      onClickOut: () => modalContext.setShow(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-Biome_dark-brightest w-3/4 sm:w-1/2 lg:w-1/4 bg-Biome_dark p-5 text-Biome_text self-center mx-auto rounded-md\",\n        children: [modalType === 'login' && /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl mb-5\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), modalType === 'register' && /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl mb-5\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), modalType === 'register' && /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-Biome_text-darker text-sm\",\n            children: \"E-mail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            className: \"mb-3 w-full\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-Biome_text-darker text-sm\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"mb-3 w-full\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-Biome_text-darker text-sm\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            className: \"mb-3 w-full\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), modalType === 'login' && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"w-full py-2 mb-3\",\n          style: {\n            borderRadius: '.3rem'\n          },\n          onClick: () => login(),\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), modalType === 'register' && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"w-full py-2 mb-3\",\n          style: {\n            borderRadius: '.3rem'\n          },\n          onClick: e => register(e),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), modalType === 'login' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"New to Biome? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-blue-600\",\n            onClick: () => modalContext.setShow('register'),\n            children: \"SIGN UP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), modalType === 'register' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-blue-600\",\n            onClick: () => modalContext.setShow('login'),\n            children: \"LOG IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthModal, \"P9X7kIn/EZr+UG4iknfUyTKgyGY=\");\n\n_c = AuthModal;\nexport default AuthModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"sources":["C:/Users/matth/ElectronApp/biome/biome-client/src/AuthModal.js"],"names":["Input","Button","useState","useContext","axios","AuthModalContext","ClickOutHandler","UserContext","AuthModal","modalType","setModalType","email","setEmail","username","setUsername","password","setPassword","modalContext","user","visibleClass","show","register","e","preventDefault","data","post","withCredentials","then","setUser","setShow","login","backgroundColor","target","value","borderRadius"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,QAAR,EAAiBC,UAAjB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAC,OAAD,CAAzC;AACA,QAAM,CAACS,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,QAAD,EAAUC,WAAV,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACa,QAAD,EAAUC,WAAV,IAAyBd,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAMe,YAAY,GAAGd,UAAU,CAACE,gBAAD,CAA/B;AACA,QAAMa,IAAI,GAAGf,UAAU,CAACI,WAAD,CAAvB;AAEA,QAAMY,YAAY,GAAGF,YAAY,CAACG,IAAb,GAAoB,OAApB,GAA8B,QAAnD;;AACA,MAAIH,YAAY,CAACG,IAAb,IAAqBH,YAAY,CAACG,IAAb,KAAsBX,SAA/C,EAA0D;AACxDC,IAAAA,YAAY,CAACO,YAAY,CAACG,IAAd,CAAZ;AACD;;AAED,WAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AAACb,MAAAA,KAAD;AAAOE,MAAAA,QAAP;AAAgBE,MAAAA;AAAhB,KAAb;AACAX,IAAAA,KAAK,CAACqB,IAAN,CAAW,gCAAX,EAA6CD,IAA7C,EAAmD;AAACE,MAAAA,eAAe,EAAC;AAAjB,KAAnD,EACGC,IADH,CACQ,MAAM;AACVT,MAAAA,IAAI,CAACU,OAAL,CAAa;AAACf,QAAAA;AAAD,OAAb;AACAI,MAAAA,YAAY,CAACY,OAAb,CAAqB,KAArB;AACAjB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAPH;AAQD;;AAED,WAASgB,KAAT,GAAiB;AACf,UAAMN,IAAI,GAAG;AAACX,MAAAA,QAAD;AAAUE,MAAAA;AAAV,KAAb;AACAX,IAAAA,KAAK,CAACqB,IAAN,CAAW,6BAAX,EAA0CD,IAA1C,EAAgD;AAACE,MAAAA,eAAe,EAAC;AAAjB,KAAhD,EACAC,IADA,CACK,MAAM;AACVV,MAAAA,YAAY,CAACY,OAAb,CAAqB,KAArB;AACAX,MAAAA,IAAI,CAACU,OAAL,CAAa;AAACf,QAAAA;AAAD,OAAb;AACD,KAJA;AAKD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAE,oDAAkDM,YAAlE;AAAgF,IAAA,KAAK,EAAE;AAACY,MAAAA,eAAe,EAAC;AAAjB,KAAvF;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAE,MAAMd,YAAY,CAACY,OAAb,CAAqB,KAArB,CAAnC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,6HAAf;AAAA,mBACGpB,SAAS,KAAK,OAAd,iBACC;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIGA,SAAS,KAAK,UAAd,iBACC;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAOGA,SAAS,KAAK,UAAd,iBACC;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,SAAS,EAAC,aAA9B;AAA4C,YAAA,KAAK,EAAEE,KAAnD;AAA0D,YAAA,QAAQ,EAAEW,CAAC,IAAIV,QAAQ,CAACU,CAAC,CAACU,MAAF,CAASC,KAAV;AAAjF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAaE;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,aAA7B;AAA2C,YAAA,KAAK,EAAEpB,QAAlD;AAA4D,YAAA,QAAQ,EAAES,CAAC,IAAIR,WAAW,CAACQ,CAAC,CAACU,MAAF,CAASC,KAAV;AAAtF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAkBE;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,SAAS,EAAC,aAAjC;AAA+C,YAAA,KAAK,EAAElB,QAAtD;AAAgE,YAAA,QAAQ,EAAEO,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACU,MAAF,CAASC,KAAV;AAA1F;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,EAsBGxB,SAAS,KAAK,OAAd,iBACC,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAqC,UAAA,KAAK,EAAE;AAACyB,YAAAA,YAAY,EAAC;AAAd,WAA5C;AAAoE,UAAA,OAAO,EAAE,MAAIJ,KAAK,EAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ,EA2BGrB,SAAS,KAAK,UAAd,iBACC,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAqC,UAAA,KAAK,EAAE;AAACyB,YAAAA,YAAY,EAAC;AAAd,WAA5C;AAAoE,UAAA,OAAO,EAAEZ,CAAC,IAAID,QAAQ,CAACC,CAAD,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ,EAiCGb,SAAS,KAAK,OAAd,iBACC;AAAA,oDACgB;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE,MAAMQ,YAAY,CAACY,OAAb,CAAqB,UAArB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCJ,EAsCGpB,SAAS,KAAK,UAAd,iBACC;AAAA,+DAC2B;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAE,MAAMQ,YAAY,CAACY,OAAb,CAAqB,OAArB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;GAtFQrB,S;;KAAAA,S;AAwFT,eAAeA,SAAf","sourcesContent":["import Input from \"./Input\";\r\nimport Button from \"./Button\";\r\nimport {useState,useContext} from 'react';\r\nimport axios from 'axios';\r\nimport AuthModalContext from \"./AuthModalContext\";\r\nimport ClickOutHandler from 'react-clickout-handler';\r\nimport UserContext from \"./UserContext\";\r\n\r\nfunction AuthModal() {\r\n  const [modalType,setModalType] = useState('login');\r\n  const [email,setEmail] = useState('');\r\n  const [username,setUsername] = useState('');\r\n  const [password,setPassword] = useState('');\r\n\r\n  const modalContext = useContext(AuthModalContext);\r\n  const user = useContext(UserContext);\r\n\r\n  const visibleClass = modalContext.show ? 'block' : 'hidden';\r\n  if (modalContext.show && modalContext.show !== modalType) {\r\n    setModalType(modalContext.show);\r\n  }\r\n\r\n  function register(e) {\r\n    e.preventDefault();\r\n    const data = {email,username,password};\r\n    axios.post('http://localhost:4000/register', data, {withCredentials:true})\r\n      .then(() => {\r\n        user.setUser({username});\r\n        modalContext.setShow(false);\r\n        setEmail('');\r\n        setPassword('');\r\n        setUsername('');\r\n      });\r\n  }\r\n\r\n  function login() {\r\n    const data = {username,password};\r\n    axios.post('http://localhost:4000/login', data, {withCredentials:true})\r\n\t  .then(() => {\r\n\t    modalContext.setShow(false);\r\n\t    user.setUser({username})\r\n\t  });\r\n  }\r\n\r\n  return (\r\n    <div className={\"w-screen h-screen fixed top-0 left-0 z-30 flex \"+visibleClass} style={{backgroundColor:'rgba(0,0,0,.6)'}}>\r\n      <ClickOutHandler onClickOut={() => modalContext.setShow(false)}>\r\n        <div className=\"border border-Biome_dark-brightest w-3/4 sm:w-1/2 lg:w-1/4 bg-Biome_dark p-5 text-Biome_text self-center mx-auto rounded-md\">\r\n          {modalType === 'login' && (\r\n            <h1 className=\"text-2xl mb-5\">Login</h1>\r\n          )}\r\n          {modalType === 'register' && (\r\n            <h1 className=\"text-2xl mb-5\">Sign Up</h1>\r\n          )}\r\n          {modalType === 'register' && (\r\n            <label>\r\n              <span className=\"text-Biome_text-darker text-sm\">E-mail:</span>\r\n              <Input type=\"email\" className=\"mb-3 w-full\" value={email} onChange={e => setEmail(e.target.value)} />\r\n            </label>\r\n          )}\r\n          <label>\r\n            <span className=\"text-Biome_text-darker text-sm\">Username:</span>\r\n            <Input type=\"text\" className=\"mb-3 w-full\" value={username} onChange={e => setUsername(e.target.value)} />\r\n          </label>\r\n\r\n          <label>\r\n            <span className=\"text-Biome_text-darker text-sm\">Password:</span>\r\n            <Input type=\"password\" className=\"mb-3 w-full\" value={password} onChange={e => setPassword(e.target.value)} />\r\n          </label>\r\n          {modalType === 'login' && (\r\n            <Button className=\"w-full py-2 mb-3\" style={{borderRadius:'.3rem'}} onClick={()=>login()}>\r\n              Log In\r\n            </Button>\r\n          )}\r\n          {modalType === 'register' && (\r\n            <Button className=\"w-full py-2 mb-3\" style={{borderRadius:'.3rem'}} onClick={e => register(e)}>\r\n              Sign Up\r\n            </Button>\r\n          )}\r\n\r\n          {modalType === 'login' && (\r\n            <div>\r\n              New to Biome? <button className=\"text-blue-600\" onClick={() => modalContext.setShow('register')}>SIGN UP</button>\r\n            </div>\r\n          )}\r\n          {modalType === 'register' && (\r\n            <div>\r\n              Already have an account? <button className=\"text-blue-600\" onClick={() => modalContext.setShow('login')}>LOG IN</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </ClickOutHandler>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthModal;"]},"metadata":{},"sourceType":"module"}